import Link from 'next/link';
import './globals.css';
import { Inter } from 'next/font/google';
import { cookies } from 'next/headers';
import { verify } from 'jsonwebtoken';
import LogOut from '@/components/LogOut';
import Cart from '@/components/Cart';
import { pool } from '@/lib/server/pg';

const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookiesValue = cookies();
  let user = null;
  let cart = null;
  try {
    user = verify(
      cookiesValue.get('token')?.value || '',
      process.env.JWT_SECRET || ''
    );
    const cartId = 4;
    // const cartId = await pool.query('SELECT id FROM carts WHERE user_id ='+user.id)
    // falta correlacionar cartID con el id para mostrar
    cart = await pool.query(
      'SELECT * FROM carts INNER JOIN cart_items ON carts.id = cart_items.cart_id INNER JOIN products ON products.id = cart_items.product_id  WHERE carts.id=' +
        cartId
    );
    console.log(user.id);
  } catch (error: any) {
    console.error('Error al verificar el token:', error.message);
  }
  // let user = null;
  // if (cookiesValue.get('token')) {
  //   user = verify(
  //     cookiesValue.get('token')?.value|| '',
  //     process.env.JWT_SECRET || ''
  //   );
  // }

  return (
    <html lang="en">
      <body className={inter.className}>
        <div className="z-50 fixed top-0 w-screen h-12 flex items-center justify-center bg-blue-300">
          <h1>Eshop</h1>
          <div className="absolute rounded-lg min-w-fit right-9 ">
            {!user && (
              <Link
                href="/login"
                className="border rounded-3xl bg-blue-400 px-2 mx-10"
              >
                Iniciar sesi√≥n
              </Link>
            )}
            {user && cart && (
              <div className="flex">
                <Cart cart={cart.rows} />
                <LogOut />
              </div>
            )}
          </div>
        </div>
        {children}
      </body>
    </html>
  );
}
