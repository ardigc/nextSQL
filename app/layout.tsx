import Link from 'next/link';
import './globals.css';
import { Inter } from 'next/font/google';
import { cookies } from 'next/headers';
import { verify } from 'jsonwebtoken';
import LogOut from '@/components/profile/LogOut';
import Cart from '@/components/cart/Cart';
import { pool } from '@/lib/server/pg';
import { Provider } from '@/components/context/ContextProvider';

interface Cart {
  cart_id: number;
  description: string;
  id: number;
  name: string;
  price: number;
  product_id: number;
  qt: number;
  user_id: number;
}

const inter = Inter({ subsets: ['latin'] });
export const revalidate = 0;
export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookiesValue = cookies();
  let user = null;
  let cart = null;
  let name = 'und';
  try {
    user = verify(
      cookiesValue.get('token')?.value || '',
      process.env.JWT_SECRET || ''
    );
    if (typeof user === 'string') {
      return;
    }
    // console.log(user);
    name = user.name;
    const cartId = await pool.query(
      'SELECT id FROM carts WHERE user_id =' + user.id + " AND state='unpay'"
    );

    // console.log(cartId.rows);

    cart = await pool.query(
      'SELECT * FROM carts INNER JOIN cart_items ON carts.id = cart_items.cart_id INNER JOIN products ON products.id = cart_items.product_id  WHERE carts.id=' +
        cartId.rows[0].id
    );
  } catch (error: any) {
    console.error('Error al verificar el token:', error.message);
    const noCart: Array<Cart> = [];
    cart = { rows: noCart };
  }
  return (
    <html lang="en">
      <body className="relative">
        <Provider initialCart={cart.rows}>
          <div className="z-50 fixed top-0 w-screen h-12 flex items-center justify-center bg-blue-300">
            <h1>Eshop</h1>
            <div className="absolute rounded-lg min-w-fit right-20 ">
              {!user && (
                <Link
                  href="/login"
                  className="border rounded-3xl bg-blue-400 px-2 mx-10"
                >
                  Iniciar sesi√≥n
                </Link>
              )}
              {user && cart && (
                <div className="flex">
                  <Cart user={name} />
                </div>
              )}
            </div>
          </div>
          {children}
        </Provider>
      </body>
    </html>
  );
}
